// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finalDeliverable.Data;

namespace finalDeliverable.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20200408104127_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("finalDeliverable.Models.Admin", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("name");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("finalDeliverable.Models.Booking", b =>
                {
                    b.Property<string>("bookingID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("busIdForeignkey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<string>("userIdForeignkey")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("bookingID");

                    b.HasIndex("busIdForeignkey");

                    b.HasIndex("userIdForeignkey");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("finalDeliverable.Models.Bus", b =>
                {
                    b.Property<string>("busID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("counter")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.HasKey("busID");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("finalDeliverable.Models.Customer", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("name");

                    b.ToTable("User");
                });

            modelBuilder.Entity("finalDeliverable.Models.Booking", b =>
                {
                    b.HasOne("finalDeliverable.Models.Bus", "bus")
                        .WithMany("BusBookingHistory")
                        .HasForeignKey("busIdForeignkey");

                    b.HasOne("finalDeliverable.Models.Customer", "user")
                        .WithMany("BookingHistory")
                        .HasForeignKey("userIdForeignkey");
                });
#pragma warning restore 612, 618
        }
    }
}
